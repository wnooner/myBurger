{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","Order","order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","react_default","a","createElement","style","textTransform","display","margin","border","padding","key","className","classes","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,MAAA,wICoCHC,EAjCD,SAACC,GACX,IAAMC,EAAc,GAEpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC7BA,EAAYE,KACR,CACIC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAKtC,IAAMI,EAAmBL,EAAYM,IAAI,SAAAC,GACrC,OAAOC,EAAAC,EAAAC,cAAA,QACHC,MAAO,CACHC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEbC,IAAKV,EAAGJ,MAAOI,EAAGJ,KARf,KAQuBI,EAAGH,OAR1B,OAWX,OACII,EAAAC,EAAAC,cAAA,OAAKQ,UAAWC,IAAQtB,OACpBW,EAAAC,EAAAC,cAAA,yBAAiBL,GACjBG,EAAAC,EAAAC,cAAA,mBAAUF,EAAAC,EAAAC,cAAA,kBAAUX,EAAMqB,MAAMC,QAAQ,+CCvB9CC,8LAGEC,KAAKxB,MAAMyB,cAAcD,KAAKxB,MAAM0B,MAAOF,KAAKxB,MAAM2B,yCAItD,IAAIC,EAASnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,MASb,OARKL,KAAKxB,MAAM8B,UACZF,EAASJ,KAAKxB,MAAM4B,OAAOrB,IAAK,SAAAR,GAAK,OACjCU,EAAAC,EAAAC,cAACb,EAAD,CACIoB,IAAKnB,EAAMgC,GACX9B,YAAaF,EAAME,YACnBoB,OAAQtB,EAAMsB,WAItBZ,EAAAC,EAAAC,cAAA,WACKiB,UAlBII,aAuCNC,sBAfS,SAAAC,GACpB,MAAO,CACHN,OAAQM,EAAMnC,MAAM6B,OACpBE,QAASI,EAAMnC,MAAM+B,QACrBJ,MAAOQ,EAAMC,KAAKT,MAClBC,OAAQO,EAAMC,KAAKR,SAIA,SAAAS,GACvB,MAAO,CACHX,cAAe,SAACC,EAAOC,GAAR,OAAmBS,EAASC,IAAoBX,EAAOC,OAI/DM,CAA6CK,YAAiBf,EAAQgB","file":"static/js/5.a1bfffac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__2msGY\"};","import React from 'react'\r\nimport classes from './Order.module.css'\r\n\r\n\r\nconst order = (props) => {\r\n    const ingredients = []\r\n\r\n    for (let ingredientName in props.ingredients) {\r\n        ingredients.push(\r\n            {\r\n                name: ingredientName,\r\n                amount: props.ingredients[ingredientName]\r\n            }\r\n        )\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span\r\n            style={{\r\n                textTransform: 'capitalize',\r\n                display: 'inline-block',\r\n                margin: '0 8px',\r\n                border: '1px solid #ccc',\r\n                padding: '5px'\r\n            }}\r\n            key={ig.name}>{ig.name} ({ig.amount})</span>\r\n    })\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>ingredients: {ingredientOutput}</p>\r\n            <p>Price: <strong>${props.price.toFixed(2)}</strong></p>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default order","import React, { Component } from 'react'\r\nimport Order from '../../components/Order/Order'\r\nimport axios from '../../Axios-orders'\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\r\nimport * as actions from '../../store/actions/index'\r\nimport { connect } from 'react-redux'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\n\r\nclass Orders extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchOrders(this.props.token, this.props.userId)\r\n    }\r\n\r\n    render() {\r\n        let orders = <Spinner />\r\n        if (!this.props.loading) {\r\n            orders = this.props.orders.map((order =>\r\n                <Order\r\n                    key={order.id}\r\n                    ingredients={order.ingredients}\r\n                    price={+order.price} />\r\n            ))\r\n        }\r\n        return (\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios))"],"sourceRoot":""}